= Steak

Minimalist acceptance testing on top of RSpec

http://dl.dropbox.com/u/645329/steak_small.jpg

== What is Steak?

Steak is like Cucumber but in plain Ruby. This is how an acceptance spec looks
like in Steak:

  feature "Main page" do

    background do
      create_user :login => "jdoe"
      login_as "jdoe"
    end

    scenario "should show existing quotes" do
      create_quote :text => "The language of friendship is not words, but meanings",
                   :author => "Henry David Thoreau"

      visit "/"

      page.should have_css(".quote", :count => 1)
      within(:css, ".quote") do
        page.should have_css(".text", :text => "The language of friendship is not words, but meanings")
        page.should have_css(".author", :text => "Henry David Thoreau")
      end
    end

  end

No explicit givens, whens or thens. No steps, no english, just Ruby: RSpec,
Steak and, in this example, some factories and Capybara. That's all.

If you are not in Rails but use RSpec, then Steak is just some aliases
providing you with the language of acceptance testing (+feature+, +scenario+,
+background+). If you are in Rails, you also have a couple of generators, a
rake task and full Rails integration testing (meaning Webrat support, for
instance)

== Getting started

=== Not in Rails

Just install and require the damned gem!

  $ gem install steak

(Add the <tt>--pre</tt> modifier to be on top of RSpec 2 instead of RSpec 1.x)

Then in your spec or spec helper:

  require 'steak'

That's all. You don't really need to require RSpec.

=== In Rails 2.x (stable branch)

Assuming you have already setup rspec-rails, add this to your project's
<tt>config/environments/test.rb</tt>:

  config.gem "steak", :lib => false

Install the gem from the command line:

  $ RAILS_ENV=test rake gems:install

Run the generator:

  $ script/generate steak

That will create some basic helper files and directory structure under the
<tt>spec/acceptance</tt> directory, already configured for +Capybara+. If you want to
use +Webrat+, just pass it to the generator:

  $ script/generate steak --webrat

Spend one minute on getting familiar with the structure and files you've got.

Now you may want to create your first acceptance spec:

  $ script/generate acceptance_spec this_is_my_first_feature

You run your acceptance specs just like your regular specs. Individually...

  $ rspec spec/acceptance/this_is_my_first_feature_spec.rb

...or all together:

  $ rspec spec/acceptance

...you can also do:

  $ rake spec:acceptance

=== In Rails 3 (master branch)

Add this to your project's <tt>Gemfile</tt>:

  group :development, :test do
    gem 'rspec-rails', '>= 2.0.0.beta.19'
    gem 'steak', '>= 1.0.0.beta.1'
    gem 'capybara'
    
    # Other usual suspects:
    # gem 'delorean'
    # gem 'database_cleaner'
    # gem 'spork'
  end

And install:

  $ bundle install

Run the generators:

  $ rails g rspec:install
  $ rails g steak:install

That will create some basic helper files and directory structure under the
<tt>spec/acceptance</tt> directory, already configured for +Capybara+.

Spend one minute on getting familiar with the structure and files you've got.

Now you may want to create your first acceptance spec:

  $ rails generate steak:spec this_is_my_first_feature

You run your acceptance specs just like your regular specs. Individually...

  $ rspec spec/acceptance/this_is_my_first_feature_spec.rb

...or all together:

  $ rspec spec/acceptance

...you can also do:

  $ rake spec:acceptance
  
== RSpec & Metadata

Steak scenarios are just regular RSpec examples with their metadata attribute 
<tt>:type</tt> set to <tt>:acceptance</tt>. That's useful if you want to make sure you 
include helpers or set hooks only for your acceptance specs and not for the 
rest of the specs in your suite.

You'd do it this way:

  RSpec.configure do |config|
    # include MyHelpers module in every acceptance spec
    config.include MyHelpers, :type => :acceptance 
    
    config.before(:each, :type => :acceptance) do
      # Some code to run before any acceptance spec
    end
  end

== Resources

- Source: http://github.com/cavalle/steak
- Issues: http://github.com/cavalle/steak/issues
- Group: http://groups.google.com/group/steakrb
- IRC channel: #steakrb on freenode
- Tutorial: http://jeffkreeftmeijer.com/2010/steak-because-cucumber-is-for-vegetarians/
- Hashtag: #steakrb
- More resources: http://wiki.github.com/cavalle/steak/resources

== Credits

Steak was created by Luismi Cavallé and improved thanks to the love from:

- Álvaro Bautista
- Felipe Talavera
- Paco Guzmán
- Jeff Kreeftmeijer
- Jaime Iniesta
- Emili Parreño
- Andreas Wolff
- Wincent Colaiuta
- Falk Pauser
- Francesc Esplugas
- Raúl Murciano
- Enable Interactive
- Vojto Rinik
- Fred Wu

Copyright (c) 2009, 2010 Luismi Cavallé, released under the MIT license
